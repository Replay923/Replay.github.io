TutorialGroup = function(t, e) {
    Phaser.Group.call(this, t), this.scene = e, this.bg = this.create(0, 0, "tutorial1"), this.bg.inputEnabled = !0, this.bg.events.onInputDown.add(this.hideTutorial, this), this.tutorialProgress = 0, this.visible = !1
}, TutorialGroup.prototype = Object.create(Phaser.Group.prototype), TutorialGroup.prototype.constructor = TutorialGroup, TutorialGroup.prototype.showTutorial = function(t) {
    1 != this.visible && (this.tutorialProgress = UtilSave.getRecord("com.tempalabs.homerunchampion.tutorial"), this.tutorialProgress == t && (this.tutorialProgress++, this.bg.loadTexture("tutorial" + this.tutorialProgress), UtilSave.setRecord(this.tutorialProgress, "com.tempalabs.homerunchampion.tutorial"), this.visible = !0, this.scene.ballScaleTween && this.scene.ballScaleTween.pause(), this.scene.ballPosTween && this.scene.ballPosTween.pause()))
}, TutorialGroup.prototype.hideTutorial = function() {
    this.visible = !1, this.scene.ballScaleTween && this.scene.ballScaleTween.resume(), this.scene.ballPosTween && this.scene.ballPosTween.resume()
}, HomerunChampion.Games = function() {}, HomerunChampion.Games.prototype = {
    create: function() {
        this.bgPitcher = this.game.add.sprite(0, 0, "bg_pitcher"), this.bgPitcher.visible = !1, this.bgBatter = this.game.add.sprite(0, 0, "bg_batter"), this.effect = this.game.add.sprite(219, 96, "effect"), this.effect.animations.add("foul", [0, 1], 3, !0), this.effect.animations.add("homerun", [2, 3], 3, !0), this.effect.animations.add("strike", [4, 5], 3, !0), this.effect.animations.add("strikeout", [6, 7], 3, !0), this.effect.animations.add("hit", [8, 9], 3, !0), this.effect.visible = !1, this.ball = null, this.pauseBtn = this.game.add.button(.5 * this.game.width, .05 * this.game.height, "btn_pause", this.onPause, this, null, null, 0, 1), this.pauseBtn.anchor.setTo(.5, .5), this.pitcherGroup = this.game.add.group(), this.batterGroup = this.game.add.group();
        var t = this.pitcherGroup.create(.5 * this.game.width, .26 * this.game.height, "catcher_front");
        t.anchor.setTo(.5, .5);
        var e = this.pitcherGroup.create(.61 * this.game.width, .26 * this.game.height, "referee_front");
        e.anchor.setTo(.5, .5), this.pitcherGroup.throwBtn = this.game.add.button(.825 * this.game.width, .715 * this.game.height, "btn_throw", this.onThrow, this, null, null, 0, 1), this.pitcherGroup.throwBtn.anchor.setTo(.5, .5), this.pitcherGroup.add(this.pitcherGroup.throwBtn), this.pitcherGroup.ball = this.pitcherGroup.create(0, 0, "ball"), this.pitcherGroup.ball.anchor.setTo(.5, .5), this.pitcherGroup.blue = this.pitcherGroup.create(.5 * this.game.width, .8 * this.game.height, "blue"), this.pitcherGroup.blue.anchor.setTo(.5, 1), this.pitcherGroup.blue.frame = 7, this.pitcherGroup.blue.animations.add("throw", [7, 8, 9, 10, 11, 12, 13, 14, 15], 10), this.pitcherGroup.red = this.pitcherGroup.create(.65 * this.game.width, .4 * this.game.height, "red"), this.pitcherGroup.red.anchor.setTo(.5, 1), this.pitcherGroup.red.frame = 0, this.pitcherGroup.red.animations.add("hit", [0, 1, 2, 3, 4, 5, 6], 10), this.pitcherGroup.panel = this.pitcherGroup.create(515, 80, "panel_vertical"), this.pitcherGroup.bar = this.pitcherGroup.create(520, 84, "bar_vertical"), this.pitcherGroup.target = this.pitcherGroup.create(520, 84 + 278 * Math.random(), "pointer_vertical"), this.pitcherGroup.pointer = this.pitcherGroup.create(575, 563, "pointer_throw"), this.pitcherGroup.pointer.anchor.setTo(.5, .5), this.pitcherGroup.visible = !1, this.batterGroup.red = this.batterGroup.create(.5 * this.game.width, .3 * this.game.height, "red"), this.batterGroup.red.anchor.setTo(.5, .5), this.batterGroup.red.frame = 7, this.batterGroup.red.animations.add("throw", [7, 8, 9, 10, 11, 12, 13, 14, 15], 10), this.batterGroup.ball = this.batterGroup.create(0, 0, "ball"), this.batterGroup.ball.anchor.setTo(.5, .5), this.batterGroup.blue = this.batterGroup.create(.15 * this.game.width, .6 * this.game.height, "blue"), this.batterGroup.blue.anchor.setTo(.5, .5), this.batterGroup.blue.frame = 0, this.batterGroup.blue.animations.add("hit", [0, 1, 2, 3, 4, 5, 6], 10);
        var t = this.batterGroup.create(.5 * this.game.width, .8 * this.game.height, "catcher_back");
        t.anchor.setTo(.5, .5);
        var e = this.batterGroup.create(.2 * this.game.width, .8 * this.game.height, "referee_back");
        e.anchor.setTo(.5, .5), this.batterGroup.hitBtn = this.game.add.button(.5 * this.game.width, .6 * this.game.height, "btn_hit", this.onHit, this, null, null, 0, 1), this.batterGroup.hitBtn.anchor.setTo(.5, .5), this.batterGroup.add(this.batterGroup.hitBtn), this.batterGroup.panel = this.batterGroup.create(70, 435, "panel_horizontal"), this.batterGroup.bar = this.batterGroup.create(74, 438, "bar_horizontal"), this.batterGroup.target = this.batterGroup.create(74, 438, "pointer_horizontal"), this.batterGroup.target.x = 71 + Math.floor(292 * Math.random()), this.batterGroup.pointer = this.batterGroup.create(71, 398, "pointer_hit"), this.batterGroup.pointer.anchor.setTo(.5, .5), this.batterGroup.panel.visible = !1, this.batterGroup.bar.visible = !1, this.batterGroup.target.visible = !1, this.batterGroup.pointer.visible = !1, this.batterGroup.hitBtn.visible = !1, this.game.add.sprite(0, 795, "gui_board"), this.redArr = [], this.blueArr = [];
        for (var i = 0; 9 > i; i++) {
            var a = 58 * i + 135,
                s = 820,
                h = this.game.add.bitmapText(a, s, "deathemaach", "0", 60);
            h.score = 0, this.redArr.push(h);
            var h = this.game.add.bitmapText(a, s + 75, "deathemaach", "0", 60);
            h.score = 0, this.blueArr.push(h)
        }
        this.score1Txt = this.game.add.bitmapText(.265 * this.game.world.width, .135 * this.game.world.height, "deathemaach", "0", 60), this.score2Txt = this.game.add.bitmapText(.697 * this.game.world.width, .135 * this.game.world.height, "deathemaach", "0", 60), this.roundTxt = this.game.add.bitmapText(10, .76 * this.game.world.height, "deathemaach", window.famobi.__("ROUND: ") + "1", 60), this.tutorialGroup = new TutorialGroup(this.game, this), this.game.add.existing(this.tutorialGroup), this.pauseGroup = this.game.add.group(), this.pauseGroup.create(0, 0, "bg_popup");
        var r = this.game.add.bitmapText(.4 * this.game.world.width, .25 * this.game.world.height, "deathemaach", window.famobi.__("PAUSE"), 60);
        r.align = "center", this.pauseGroup.add(r);
        var l = this.pauseGroup.create(320, 410, "gui_cup");
        l.anchor.setTo(.5, .5), l.frame = this.game.levelNum <= 8 ? 0 : this.game.levelNum <= 16 ? 1 : 2;
        var o = this.game.add.button(.25 * this.game.width, .6 * this.game.height, "btn_close", this.onExit, this, null, null, 0, 1);
        o.anchor.setTo(.5, 0), this.pauseGroup.add(o);
        var n = this.game.add.button(.5 * this.game.width, .55 * this.game.height, "btn_retry", this.onRetry, this, null, null, 0, 1);
        n.anchor.setTo(.5, 0), this.pauseGroup.add(n), this.soundoffBtn = this.game.add.button(.75 * this.game.world.width, .6 * this.game.world.height, "btn_audio_off", this.onAudio, this, null, null, 1), this.soundoffBtn.anchor.setTo(.5, 0), this.soundoffBtn.visible = !1, this.pauseGroup.add(this.soundoffBtn), this.soundonBtn = this.game.add.button(.75 * this.game.world.width, .6 * this.game.world.height, "btn_audio_on", this.onAudio, this, null, null, 1), this.soundonBtn.anchor.setTo(.5, 0), this.pauseGroup.add(this.soundonBtn);
        var u = this.game.add.button(.5 * this.game.width, .68 * this.game.height, "btn_play", this.onPause, this, null, null, 0, 1);
        u.anchor.setTo(.5, 0), this.pauseGroup.add(u), this.pauseGroup.visible = !1, this.resultGroup = this.game.add.group();
        this.resultGroup.create(0, 0, "bg_popup");
        this.resultGroup.create(47, 167, "logo_result"), this.rating = this.resultGroup.create(321, 490, "gui_rating_big"), this.rating.anchor.setTo(.5, .5), this.rating.frame = 1;
        var o = this.game.add.button(.25 * this.game.width, .64 * this.game.height, "btn_close", this.onExit, this, null, null, 0, 1);
        o.anchor.setTo(.5, 0), this.resultGroup.add(o);
        var n = this.game.add.button(.5 * this.game.width, .68 * this.game.height, "btn_retry", this.onRetry, this, null, null, 0, 1);
        switch (n.anchor.setTo(.5, 0), this.resultGroup.add(n), this.nextBtn = this.game.add.button(.75 * this.game.width, .64 * this.game.height, "btn_next", this.onNext, this, null, null, 0, 1), this.nextBtn.anchor.setTo(.5, 0), this.resultGroup.add(this.nextBtn), this.resultGroup.visible = !1, this.levelData = {
            ballSpeed: 5e3,
            barSpeed: .01
        }, this.game.levelNum) {
            case 0:
                this.levelData = {
                    ballSpeed: 3500,
                    barSpeed: .03
                };
                break;
            case 1:
                this.levelData = {
                    ballSpeed: 3450,
                    barSpeed: .031
                };
                break;
            case 2:
                this.levelData = {
                    ballSpeed: 3400,
                    barSpeed: .032
                };
                break;
            case 3:
                this.levelData = {
                    ballSpeed: 3350,
                    barSpeed: .033
                };
                break;
            case 4:
                this.levelData = {
                    ballSpeed: 3300,
                    barSpeed: .034
                };
                break;
            case 5:
                this.levelData = {
                    ballSpeed: 3250,
                    barSpeed: .035
                };
                break;
            case 6:
                this.levelData = {
                    ballSpeed: 3200,
                    barSpeed: .036
                };
                break;
            case 7:
                this.levelData = {
                    ballSpeed: 3150,
                    barSpeed: .037
                };
                break;
            case 8:
                this.levelData = {
                    ballSpeed: 3100,
                    barSpeed: .038
                };
                break;
            case 9:
                this.levelData = {
                    ballSpeed: 3050,
                    barSpeed: .039
                };
                break;
            case 10:
                this.levelData = {
                    ballSpeed: 3e3,
                    barSpeed: .04
                };
                break;
            case 11:
                this.levelData = {
                    ballSpeed: 2950,
                    barSpeed: .041
                };
                break;
            case 12:
                this.levelData = {
                    ballSpeed: 2900,
                    barSpeed: .042
                };
                break;
            case 13:
                this.levelData = {
                    ballSpeed: 2850,
                    barSpeed: .043
                };
                break;
            case 14:
                this.levelData = {
                    ballSpeed: 2800,
                    barSpeed: .044
                };
                break;
            case 15:
                this.levelData = {
                    ballSpeed: 2750,
                    barSpeed: .045
                };
                break;
            case 16:
                this.levelData = {
                    ballSpeed: 2700,
                    barSpeed: .046
                };
                break;
            case 17:
                this.levelData = {
                    ballSpeed: 2650,
                    barSpeed: .047
                };
                break;
            case 18:
                this.levelData = {
                    ballSpeed: 2600,
                    barSpeed: .048
                };
                break;
            case 19:
                this.levelData = {
                    ballSpeed: 2550,
                    barSpeed: .049
                };
                break;
            case 20:
                this.levelData = {
                    ballSpeed: 2500,
                    barSpeed: .05
                };
                break;
            case 21:
                this.levelData = {
                    ballSpeed: 2450,
                    barSpeed: .051
                };
                break;
            case 22:
                this.levelData = {
                    ballSpeed: 2400,
                    barSpeed: .052
                };
                break;
            case 23:
                this.levelData = {
                    ballSpeed: 2350,
                    barSpeed: .053
                }
        }
        this.state = "batter", this.round = 0, this.onAction = !1, this.timerCount = 0, this.barCount = 0, this.pitchPower = 0, this.enemyStrike = 0, this.playerStrike = 0, this.enemyFoul = 0, this.playerFoul = 0, this.ball = this.batterGroup.ball, this.delayedCall(1e3, this.enemyStartPitching)
    },
    showPitcherGroupUI: function(t) {
        this.pitcherGroup.panel.visible = t, this.pitcherGroup.bar.visible = t, this.pitcherGroup.pointer.visible = t, this.pitcherGroup.throwBtn.visible = t, this.pitcherGroup.target.visible = t, 1 == t && (this.pitcherGroup.target.y = 84 + 278 * Math.random())
    },
    showBatterGroupUI: function(t) {
        this.batterGroup.panel.visible = t, this.batterGroup.bar.visible = t, this.batterGroup.pointer.visible = t, this.batterGroup.hitBtn.visible = t, this.batterGroup.target.visible = t, 1 == t && (this.batterGroup.target.x = 71 + Math.floor(292 * Math.random()))
    },
    showEffect: function() {
        this.effect.visible = !0
    },
    hideEffect: function() {
        this.effect.visible = !1
    },
    delayedCall: function(t, e) {
        var i = this.game.add.tween(this).to({}, t, Phaser.Easing.Linear.In, !0);
        i.onComplete.add(e, this)
    },
    enemyStartPitching: function() {
        this.batterGroup.blue.frame = 0, this.batterGroup.red.frame = 7, this.batterGroup.red.animations.play("throw"), this.delayedCall(800, this.startBatter)
    },
    startBatter: function() {
        this.onAction = !1, this.ball.x = .5 * this.game.width, this.ball.y = .3 * this.game.height, this.ball.scale.setTo(.2, .2), this.ball.visible = !0, this.ballScaleTween = this.game.add.tween(this.ball.scale).to({
            x: 1.8,
            y: 1.8
        }, .8 * this.levelData.ballSpeed, Phaser.Easing.Circular.In, !0), this.ballPosTween = this.game.add.tween(this.ball).to({
            y: .65 * this.game.height
        }, .8 * this.levelData.ballSpeed, Phaser.Easing.Circular.In, !0), this.ballPosTween.onComplete.add(this.finishBatter, this), this.delayedCall(.7 * this.levelData.ballSpeed, this.playerHit), this.showBatterGroupUI(!0)
    },
    finishBatter: function() {
        this.showBatterGroupUI(!1), this.effect.visible = !0;
        var t = Math.abs(this.batterGroup.pointer.x - (this.batterGroup.target.x + 100));
        0 == this.onAction && (t = 200), console.log("difX=" + t);
        var e = 2 * Math.random() < 1 ? Math.random() * -this.game.width : this.game.width + Math.random() * this.game.width;
        console.log("targetX=" + e), 10 >= t ? (UtilSound.playSound("sfx_homerun"), this.effect.animations.play("homerun", 3, !0), this.ballScaleTween = this.game.add.tween(this.ball.scale).to({
            x: .2,
            y: .2
        }, 500, Phaser.Easing.Linear.In, !0), this.ballPosTween = this.game.add.tween(this.ball).to({
            x: e,
            y: -2e3
        }, 1e3, Phaser.Easing.Linear.In, !0), this.blueArr[this.round].score = 3, this.blueArr[this.round].setText("3"), this.delayedCall(2e3, this.hideEffect), this.delayedCall(3e3, this.changeRound)) : 40 >= t ? (UtilSound.playSound("sfx_hit"), this.effect.animations.play("hit", 3, !0), this.ballScaleTween = this.game.add.tween(this.ball.scale).to({
            x: .2,
            y: .2
        }, 750, Phaser.Easing.Linear.In, !0), this.ballPosTween = this.game.add.tween(this.ball).to({
            x: e,
            y: -1e3
        }, 1e3, Phaser.Easing.Linear.In, !0), this.blueArr[this.round].score = 1, this.blueArr[this.round].setText("1"), this.delayedCall(2e3, this.hideEffect), this.delayedCall(3e3, this.changeRound)) : 100 >= t ? (this.effect.animations.play("foul", 3, !0), this.playerFoul++, this.ballScaleTween = this.game.add.tween(this.ball.scale).to({
            x: .2,
            y: .2
        }, 1e3, Phaser.Easing.Linear.In, !0), this.ballPosTween = this.game.add.tween(this.ball).to({
            x: e,
            y: 0
        }, 1e3, Phaser.Easing.Linear.In, !0), 3 == this.playerFoul ? (this.playerFoul = 0, this.playerStrike++, this.playerStrike >= 3 ? (this.effect.animations.play("strikeout", 3, !0), UtilSound.playSound("sfx_strike"), this.delayedCall(2e3, this.hideEffect), this.delayedCall(3e3, this.changeRound)) : (this.effect.animations.play("strike", 3, !0), UtilSound.playSound("sfx_strike"), this.delayedCall(2e3, this.hideEffect), this.delayedCall(3e3, this.enemyStartPitching))) : t > 40 && 100 >= t && (this.delayedCall(2e3, this.hideEffect), this.delayedCall(3e3, this.enemyStartPitching))) : (this.playerStrike++, this.ballScaleTween = this.game.add.tween(this.ball.scale).to({
            x: 2,
            y: 2
        }, .2 * this.levelData.ballSpeed, Phaser.Easing.Linear.In, !0), this.ballPosTween = this.game.add.tween(this.ball).to({
            y: .9 * this.game.height
        }, .2 * this.levelData.ballSpeed, Phaser.Easing.Linear.In, !0), this.playerStrike >= 3 ? (this.effect.animations.play("strikeout", 3, !0), UtilSound.playSound("sfx_strike"), this.delayedCall(2e3, this.hideEffect), this.delayedCall(3e3, this.changeRound)) : (this.effect.animations.play("strike", 3, !0), UtilSound.playSound("sfx_strike"), this.delayedCall(2e3, this.hideEffect), this.delayedCall(3e3, this.enemyStartPitching)))
    },
    playerHit: function() {
        this.batterGroup.blue.animations.play("hit", 15, !1)
    },
    onHit: function() {
        UtilSound.playSound("sfx_button"), this.onAction = !0, this.showBatterGroupUI(!1)
    },
    startPitcher: function() {
        this.ball.x = .5 * this.game.width, this.ball.y = .6 * this.game.height, this.ball.scale.setTo(2, 2), this.showPitcherGroupUI(!1);
        var t = Math.abs(this.pitcherGroup.pointer.y - (this.pitcherGroup.target.y + 100)),
            e = 1e3;
        if (20 >= t) {
            var e = 500;
            this.ballScaleTween = this.game.add.tween(this.ball.scale).to({
                x: .2,
                y: .2
            }, e, Phaser.Easing.Circular.Out, !0, 1e3), this.ballPosTween = this.game.add.tween(this.ball).to({
                y: .26 * this.game.height
            }, e, Phaser.Easing.Circular.Out, !0, 1e3), this.ballPosTween.onComplete.add(this.finishPitcher, this), this.delayedCall(.95 * e, this.enemyHit)
        } else t > 20 && (this.ballScaleTween = this.game.add.tween(this.ball.scale).to({
            x: .35,
            y: .35
        }, .9 * e, Phaser.Easing.Circular.Out, !0, 1e3), this.ballPosTween = this.game.add.tween(this.ball).to({
            y: .32 * this.game.height
        }, .9 * e, Phaser.Easing.Circular.Out, !0, 1e3), this.ballPosTween.onComplete.add(this.finishPitcherA, this), this.delayedCall(1.2 * e, this.enemyHit))
    },
    enemyHit: function() {
        this.pitcherGroup.red.animations.play("hit", 10, !1)
    },
    finishPitcherA: function() {
        var t = 2 * Math.random() < 1 ? Math.random() * -this.game.width : this.game.width + Math.random() * this.game.width;
        this.ballScaleTween = this.game.add.tween(this.ball.scale).to({
            x: 2,
            y: 2
        }, 1e3, Phaser.Easing.Linear.In, !0), this.ballPosTween = this.game.add.tween(this.ball).to({
            x: t,
            y: .9 * this.game.height
        }, 1e3, Phaser.Easing.Linear.In, !0), this.ballPosTween.onComplete.add(this.finishPitcher, this)
    },
    finishPitcher: function() {
        this.effect.visible = !0;
        var t = Math.abs(this.pitcherGroup.pointer.y - (this.pitcherGroup.target.y + 100));
        20 >= t ? (this.enemyStrike++, UtilSound.playSound("sfx_strike"), 3 == this.enemyStrike ? (this.enemyStrike = 0, this.effect.animations.play("strikeout", 3, !0), this.delayedCall(2e3, this.changeRound)) : (this.effect.animations.play("strike", 3, !0), this.delayedCall(2e3, this.showPitcherUI))) : 55 >= t ? (this.enemyFoul++, 3 == this.enemyFoul ? (this.enemyFoul = 0, this.enemyStrike++, 3 == this.enemyStrike ? (this.enemyStrike = 0, this.effect.animations.play("strikeout", 3, !0), this.delayedCall(2e3, this.changeRound)) : (this.effect.animations.play("strike", 3, !0), this.delayedCall(2e3, this.showPitcherUI))) : (this.effect.animations.play("foul", 3, !0), this.delayedCall(2e3, this.showPitcherUI))) : 100 >= t ? (UtilSound.playSound("sfx_hit"), this.redArr[this.round].score = 1, this.redArr[this.round].setText("1"), this.enemyFoul = 0, this.enemyStrike = 0, this.effect.animations.play("hit", 3, !0), this.delayedCall(2e3, this.changeRound)) : (UtilSound.playSound("sfx_homerun"), this.redArr[this.round].score = 3, this.redArr[this.round].setText("3"), this.enemyFoul = 0, this.enemyStrike = 0, this.effect.animations.play("homerun", 3, !0), this.delayedCall(2e3, this.changeRound)), this.delayedCall(2e3, this.onPitcherResetAnimation), this.delayedCall(2e3, this.hideEffect)
    },
    onPitcherResetAnimation: function() {
        this.pitcherGroup.red.frame = 0, this.pitcherGroup.blue.frame = 7, this.ball.x = .5 * this.game.width, this.ball.y = .6 * this.game.height, this.ball.scale.setTo(2, 2)
    },
    showPitcherUI: function() {
        this.showPitcherGroupUI(!0)
    },
    onThrow: function() {
        UtilSound.playSound("sfx_button"), this.onAction = !1, this.pitcherGroup.blue.animations.play("throw", 10, !1), this.onPitcherResetAnimation(), this.startPitcher()
    },
    changeRound: function() {
        var t = this;
        ShowFBAD();
        //window.famobi.showAd(function() {
            t.reallyChangeRound()
        //})
    },
    reallyChangeRound: function() {
        this.pitchPower = 0, this.enemyStrike = 0, this.playerStrike = 0, this.enemyFoul = 0, this.playerFoul = 0, this.pitcherGroup.red.frame = 0, this.pitcherGroup.blue.frame = 7, this.batterGroup.red.frame = 7, this.batterGroup.blue.frame = 0, "pitcher" == this.state ? (this.state = "batter", this.batterGroup.target.x = 71 + Math.floor(292 * Math.random()), this.round++, this.ball = this.batterGroup.ball, this.ball.x = .5 * this.game.width, this.ball.y = .3 * this.game.height, this.ball.scale.setTo(.2, .2), this.ball.visible = !1, this.round < 9 ? (this.roundTxt.setText(window.famobi.__("ROUND: ") + (this.round + 1)), this.bgPitcher.visible = !1, this.pitcherGroup.visible = !1, this.bgBatter.visible = !0, this.batterGroup.visible = !0, this.batterGroup.panel.visible = !1, this.batterGroup.bar.visible = !1, this.batterGroup.target.visible = !1, this.batterGroup.pointer.visible = !1, this.batterGroup.hitBtn.visible = !1, this.delayedCall(1e3, this.enemyStartPitching)) : this.showResult()) : "batter" == this.state && (this.ball = this.pitcherGroup.ball, this.state = "pitcher", this.bgPitcher.visible = !0, this.pitcherGroup.visible = !0, this.bgBatter.visible = !1, this.batterGroup.visible = !1, this.showPitcherGroupUI(!0))
    },
    setScore: function() {
        for (var t = 0, e = 0, i = 0; i < this.blueArr.length; i++) t += this.blueArr[i].score;
        for (i = 0; i < this.redArr.length; i++) e += this.redArr[i].score;
        this.score1Txt.setText("" + t), t > 9 && (this.score1Txt.x = .25 * this.game.world.width), this.score2Txt.setText("" + e), e > 9 && (this.score2Txt.x = .68 * this.game.world.width)
    },
    onTimer: function() {
        this.setScore(), "batter" == this.state ? (this.tutorialGroup.showTutorial(0), this.tutorialGroup.showTutorial(1), this.tutorialGroup.showTutorial(4), this.tutorialGroup.showTutorial(5)) : "pitcher" == this.state && (this.tutorialGroup.showTutorial(2), this.tutorialGroup.showTutorial(3))
    },
    update: function() {
        1 != this.pauseGroup.visible && 1 != this.resultGroup.visible && (this.timerCount += this.game.time.elapsed, this.timerCount >= 1e3 && (this.timerCount = 0, this.onTimer()), this.barCount += this.levelData.barSpeed, this.barCount > 180 && (this.barCount = -180), "batter" == this.state ? 1 == this.batterGroup.pointer.visible && (this.batterGroup.pointer.x = 317 + 246 * Math.sin(this.barCount)) : "pitcher" == this.state && 1 == this.pitcherGroup.pointer.visible && (this.pitchPower = 50 + 50 * Math.sin(this.barCount), this.pitcherGroup.pointer.y = 324 - 239 * Math.sin(this.barCount)))
    },
    showResult: function() {
        this.resultGroup.visible = !0;
        for (var t = 0, e = 0, i = 0; 9 > i; i++) t += this.blueArr[i].score, e += this.redArr[i].score;
        var a = !1,
            s = 0;
        if (t >= 3 * e ? (a = !0, s = 3) : t >= 2 * e ? (a = !0, s = 2) : t > e ? (a = !0, s = 1) : (a = !1, s = 0), this.rating.frame = s, a) {
            window.famobi.levelUp();
            var h = UtilSave.getRecord("com.tempalabs.homerunchampion.star." + this.game.levelNum);
            s > h && UtilSave.setRecord(s, "com.tempalabs.homerunchampion.star." + this.game.levelNum);
            var r = UtilSave.getRecord("com.tempalabs.homerunchampion.level");
            this.game.levelNum == r && (r++, UtilSave.setRecord(r, "com.tempalabs.homerunchampion.level"));
            var l = this.resultGroup.create(.5 * this.game.width, .31 * this.game.height, "gui_win");
            l.anchor.setTo(.5, .5), this.nextBtn.visible = !0, UtilSound.playSound("sfx_win")
        } else {
            window.famobi.gameOver();
            var o = this.resultGroup.create(.5 * this.game.width, .31 * this.game.height, "gui_lose");
            o.anchor.setTo(.5, .5), this.nextBtn.visible = !1, UtilSound.playSound("sfx_lose")
        }
    },
    onTutorial: function() {
        UtilSound.playSound("sfx_button"), this.tutorialGroup.visible = !this.tutorialGroup.visible
    },
    onPause: function() {
        UtilSound.playSound("sfx_button"), 0 == this.pauseGroup.visible ? (this.ballScaleTween && this.ballScaleTween.pause(), this.ballPosTween && this.ballPosTween.pause()) : (this.ballScaleTween && this.ballScaleTween.resume(), this.ballPosTween && this.ballPosTween.resume()), this.pauseGroup.visible = !this.pauseGroup.visible
    },
    onExit: function() {
        UtilSound.playSound("sfx_button"), this.game.state.start("title")
    },
    onRetry: function() {
        UtilSound.playSound("sfx_button"), this.game.state.start("games")
    },
    onNext: function() {
        UtilSound.playSound("sfx_button"), this.game.levelNum++, this.game.state.start(this.game.levelNum < 24 ? "games" : "level")
    },
    onAudio: function() {
        UtilSound.playSound("sfx_button"), 0 == UtilSound.isMute ? (UtilSound.mute(), this.soundoffBtn.visible = !0, this.soundonBtn.visible = !1) : (UtilSound.unmute(), this.soundoffBtn.visible = !1, this.soundonBtn.visible = !0)
    }
};